class Box {
    double width;
    double height;
    double depth;

    //constructor tajes an objects of type box.
    /*Bu constructor'Ä±n amacÄ±:
    eÄŸer zaten tanÄ±mlanmÄ±ÅŸ bir Box nesnesi varsa 
    (Ã¶rneÄŸin mybox1), o kutunun tÃ¼m Ã¶zelliklerini yeniden bir kutuya kopyalamak.
ğŸ“¦ Yani mybox2 = mybox1 gibi olur ama farklÄ± adreslerde, farklÄ± nesnelerdir. Biri deÄŸiÅŸince Ã¶bÃ¼rÃ¼ etkilenmez!*/
    Box(Box ob) { // pass object to constructor
        width = ob.width;
        height = ob.height;
        depth = ob.depth;
    }

    //constructor used when provided all dimensions Bu bildiÄŸimiz klasik constructor. KullanÄ±cÄ±dan gelen deÄŸerlerle Box oluÅŸturur.
    Box(double w, double h, double d) {
        width = w;
        height = h;
         depth = d ;
    }

    double volume() {
        return width*height*depth;
    }
}
class consttakesobj {
    public static void main(String[] args) {
        Box mybox1 = new Box(10,20,15);
        Box mybox2 = new Box(mybox1);
        /* Bu satÄ±rda mybox1 nesnesini parametre olarak Box(Box ob) constructor'Ä±na verdik.
SonuÃ§ olarak mybox2 de aynÄ± boyutlara sahip olacak ama ayrÄ± bir nesne! */
        double vol;

        vol = mybox1.volume();
        System.out.println("Volume of mybox1 is " +vol);
        vol = mybox2.volume();
        System.out.println("The volume of box2 =" +vol);
        
    }
}