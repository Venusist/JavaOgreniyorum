/* 
ğŸ’¡ Java'da KalÄ±tÄ±m (Inheritance) Nedir?
Java'da bir sÄ±nÄ±f baÅŸka bir sÄ±nÄ±fÄ±n Ã¶zelliklerini (deÄŸiÅŸkenler) ve davranÄ±ÅŸlarÄ±nÄ± (metotlar) devralabilir (inherit).
Bu durumda iki tÃ¼r sÄ±nÄ±f vardÄ±r:

ğŸ”¸ superclass (ebeveyn/sÄ±nÄ±f):
Ã–zellikleri ve metotlarÄ± tanÄ±mlar.
DiÄŸer sÄ±nÄ±flar bu sÄ±nÄ±ftan kalÄ±tÄ±m alabilir.
Ã–rnek: Vehicle

ğŸ”¹ subclass (alt sÄ±nÄ±f / child):
superclass'tan kalÄ±tÄ±m alÄ±r.
extends anahtar kelimesi ile tanÄ±mlanÄ±r.
Ã–rnek: Car, Truck, Bike

 */

 class Vehicle {
    protected String brand = "Ford";  // Alt sÄ±nÄ±flar eriÅŸebilsin diye 'protected' yapÄ±ldÄ±
    public void honk() {
        System.out.println("Tuut tuut");
    }
}

public class bir extends Vehicle {  // 'bir' yerine daha anlamlÄ± bir isim: Car
    private String modelName = "Mustang";

    public static void main(String[] args) {
        bir myCar = new bir();     // Car nesnesi oluÅŸturduk
        myCar.honk();              // Vehicle sÄ±nÄ±fÄ±ndan miras alÄ±nan metot

        // modelName private olduÄŸu iÃ§in doÄŸrudan eriÅŸilemez, getter kullanman gerekir
        System.out.println(myCar.brand + " " + myCar.modelName); // Bu satÄ±r hata verir
    }
}
/* kod hata verir  private olduÄŸu iÃ§in zaten amaÃ§ Ã¶ÄŸrenmek */