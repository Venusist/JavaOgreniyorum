/* 
 When a method in a subclass has the same name and type signature as a method in its superclass, then the method in the subclass is said to override the method in the superclass.
When an overridden method is called from within its subclass, it will always refer to the version of that method defined by the subclass.

ğŸ”¹ Alt sÄ±nÄ±fta, Ã¼st sÄ±nÄ±ftaki bir metodun aynÄ± isimle ve aynÄ± parametrelerle yeniden yazÄ±lmasÄ± olayÄ±na method overriding (metot ezme) denir.
ğŸ”¹ EÄŸer bir metot ezilmiÅŸse (override edilmiÅŸse) ve bu metot alt sÄ±nÄ±ftan Ã§aÄŸrÄ±lÄ±rsa, Ã¼st sÄ±nÄ±ftaki deÄŸil, alt sÄ±nÄ±ftaki versiyonu Ã§alÄ±ÅŸÄ±r.
 */
class A {
    int i,j;
    A( int a, int b) {
        i = a;
        j= b;
    }
    void show() {
        System.out.println("i and j :" +i+ " " +j);
    }
}
class B extends A {
    int k;
    B(int a, int b, int c) {
        super (a,b);
        k=c;
    }

    //display k - this overrides show() in A 
    void show() {
        System.out.println("k: "+k);
    }
}

public class methodoverriding {
    public static void main(String[] args) {
        B subOb = new B(1,2,3);

        subOb.show();
    }
}